# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet lg
console.log($1);
endsnippet

snippet rf
return false;
endsnippet

snippet eri
$1.parentNode.removeChild($1);
endsnippet

snippet iajax
import { ajax } from '/mjs/lib/network.js';
endsnippet

snippet idom
import { Dom } from '/mjs/lib/dom.js';
endsnippet

snippet ipaginator
import { Paginator } from '/mjs/lib/ext/paginator.js';
endsnippet

snippet ivalidator
import Validator from '/mjs/lib/ext/validator.js';
endsnippet

snippet imodal
import { Modal } from '/mjs/lib/modal.js';
endsnippet

snippet ajax
ajax(`${1}`, {\n\tmethod: '${2}',\n\tdata: { ${4} }\n});
endsnippet

snippet modal
Modal.open(modal => {\n\tmodal\n\t\t.title('${1}')\n\t\t.body(${2});\n});
endsnippet

snippet dom
Dom.element('${1}', {\n\tclassName: '${2}',\n\tinnerHTML: '${3}'\n});
endsnippet
